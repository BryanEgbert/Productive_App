@page "/"
@inherits FrontEnd.Components.Timer

<div class="page">
    <div class="timer">
        <p>@Hours.ToString("00"):@Minutes.ToString("00"):@Seconds.ToString("00")</p>
        <div class="timerBtn">
            <button class="start-btn" @onclick="StartTimer" disabled=@StartButtonIsDisabled>Start</button>
            <button class="stop-btn" @onclick="StopTimer" disabled=@StopButtonIsDisabled>Stop</button>
        </div>
    </div>

    <div class="setTimer">
        <h3>Set Timer</h3>
        <a href="" @onclick="showModal">Add Timer +</a>
        <div class="setTimerBtn">
        @foreach (TimerStructure timer in timerCollections)
        {
            <button disabled=@SetTimerButtonIsDisabled @onclick="() => SetTimer(timer.Id)">
                @timer.Hours.ToString("00"):@timer.Minutes.ToString("00"):@timer.Seconds.ToString("00")
            </button>
        }
        </div>
    </div>
    <PopUpPage Title="Create Costum Timer" IsOpened="isOpened" 
        OnExit="hideModal" OnAdd="addTimer" 
        OnHoursChange="(e => Hours = Convert.ToInt32(e.Value))"
        OnMinutesChange="(e => Minutes = Convert.ToInt32(e.Value))"
        OnSecondsChange="(e => Seconds = Convert.ToInt32(e.Value))"
        Hours="@Hours" Minutes="@Minutes" Seconds="@Seconds"></PopUpPage>
</div>

@code {
    private bool isOpened = false;
    private void showModal()
    {
        isOpened = true;
        System.Console.WriteLine($"{isOpened}");
    }
    private void hideModal()
    {
        isOpened = false;
    }
    private void addTimer()
    {
        isOpened = false;
        timerCollections.Add( new TimerStructure() 
            { Id = (timerCollections.Count + 1), Hours = Hours, Minutes = Minutes, Seconds = Seconds });
    }
}